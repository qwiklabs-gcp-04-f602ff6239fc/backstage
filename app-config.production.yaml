app:
  # Should be the same as backend.baseUrl when using the `app-backend` plugin.
  baseUrl: http://localhost:7007

backend:
  # Note that the baseUrl should be the URL that the browser and other clients
  # should use when communicating with the backend, i.e. it needs to be
  # reachable not just from within the backend host, but from all of your
  # callers. When its value is "http://localhost:7007", it's strictly private
  # and can't be reached by others.
  baseUrl: http://localhost:7007
  # The listener can also be expressed as a single <host>:<port> string. In this case we bind to
  # all interfaces, the most permissive setting. The right value depends on your specific deployment.
  listen:
    port: 7007

  # config options: https://node-postgres.com/api/client
  database:
    client: pg
    connection:
      host: ${POSTGRES_HOST}
      port: ${POSTGRES_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
      # https://node-postgres.com/features/ssl
      # you can set the sslmode configuration option via the `PGSSLMODE` environment variable
      # see https://www.postgresql.org/docs/current/libpq-ssl.html Table 33.1. SSL Mode Descriptions (e.g. require)
      # ssl:
      #   ca: # if you have a CA file and want to verify it you can uncomment this section
      #     $file: <file-path>/ca/server.crt

catalog:
  providers:
    github:
      production:
        organization: ${GITHUB_ORG} # string
        catalogPath: '/catalog-info.yaml' # string
        filters:
          branch: 'main' # string
          repository: '.*' # Regex
        schedule: # optional; same options as in TaskScheduleDefinition
          # supports cron, ISO duration, "human duration" as used in code
          frequency: { minutes: 5 }
          # supports ISO duration, "human duration" as used in code
          timeout: { minutes: 3 }
      templates:
        organization: ${GITHUB_ORG} # string
        catalogPath: '/**/template.yaml' # string
        filters:
          branch: 'main' # string
          repository: '.*' # Regex
        schedule: # optional; same options as in TaskScheduleDefinition
          # supports cron, ISO duration, "human duration" as used in code
          frequency: { minutes: 5 }
          # supports ISO duration, "human duration" as used in code
          timeout: { minutes: 3 }
  rules:
    - allow: [Component, System, API, Resource, Location, Template]
auth:
  environment: production
  providers:
    github:
      production:
        clientId: ${AUTH_GITHUB_CLIENT_ID}
        clientSecret: ${AUTH_GITHUB_CLIENT_SECRET}

integrations:
  github:
    - host: github.com
      apps:
        - appId: ${INTEGRATION_GITHUB_APP_ID}
          clientId: ${INTEGRATION_GITHUB_CLIENT_ID}
          clientSecret: ${INTEGRATION_GITHUB_CLIENT_SECRET}
          privateKey: ${INTEGRATION_GITHUB_PRIVATE_KEY}
          webhookSecret: ${INTEGRATION_GITHUB_WEBHOOK_SECRET}

techdocs:
  builder: 'external'
  publisher:
    type: 'googleGcs'
    googleGcs:
      bucketName: ${TECHDOCS_BUCKET_NAME}
      credentials: ${GOOGLE_APPLICATION_CREDENTIALS}
      projectId: ${GOOGLE_PROJECT_ID}

godaddy:
  apiKey: ${GODADDY_API_KEY}
  apiSecret: ${GODADDY_API_SECRET}
